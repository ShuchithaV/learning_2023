#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int rollno;
    char name[20];
    float marks;
} Student;

void parseString(const char* inputString, Student* students, int size) {
    char *token;
    char *rest = (char *)inputString;
    int i = 0;

    while ((token = strtok_r(rest, " ", &rest)) != NULL && i < size) {
        students[i].rollno = atoi(token);
        token = strtok_r(rest, " ", &rest);
        strncpy(students[i].name, token, sizeof(students[i].name) - 1);
        token = strtok_r(rest, " ", &rest);
        students[i].marks = atof(token);
        i++;
    }
}

int main() {
    int size;
    printf("Enter the number of students: ");
    scanf("%d", &size);
    getchar(); 

    Student* students = (Student*)malloc(size * sizeof(Student));

    if (students == NULL) {
        printf("Memory allocation failed.\n");
        return 1;
    }

    char inputString[100];
    printf("\nEnter the student details:\n");

    for (int i = 0; i < size; i++) {
        printf("\nStudent %d: ", i + 1);
        fgets(inputString, sizeof(inputString), stdin);
        inputString[strcspn(inputString, "\n")] = '\0'; 
        parseString(inputString, &students[i], 1);
    }

    printf("\nStudent details:\n");

    for (int i = 0; i < size; i++) {
        printf("\nStudent %d:\n", i + 1);
        printf("Roll No: %d\n", students[i].rollno);
        printf("Name: %s\n", students[i].name);
        printf("Marks: %.2f\n", students[i].marks);
    }

    free(students);

    return 0;
}
