#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define BUFFER_SIZE 4096

void changeCase(char* content, int option) {
    switch (option) {
        case 'u':
            for (int i = 0; content[i] != '\0'; i++) {
                content[i] = toupper(content[i]);
            }
            break;
        case 'l':
            for (int i = 0; content[i] != '\0'; i++) {
                content[i] = tolower(content[i]);
            }
            break;
        case 's':
            for (int i = 0; content[i] != '\0'; i++) {
                if (islower(content[i])) {
                    content[i] = toupper(content[i]);
                }
            }
            break;
    }
}

int main(int argc, char* argv[]) {
    if (argc < 3) {
        printf("Insufficient arguments.\n");
        printf("Usage: ./cp [-u | -l | -s] <source_file> <destination_file>\n");
        return 1;
    }

    int option = 0;
    if (argv[1][0] == '-') {
        option = argv[1][1];
        if (strlen(argv[1]) != 2 || (option != 'u' && option != 'l' && option != 's')) {
            printf("Invalid option.\n");
            printf("Usage: ./cp [-u | -l | -s] <source_file> <destination_file>\n");
            return 1;
        }
    }

    FILE* sourceFile;
    FILE* destinationFile;
    char buffer[BUFFER_SIZE];
    size_t bytesRead;

    sourceFile = fopen(argv[2], "r");
    if (sourceFile == NULL) {
        printf("Failed to open the source file.\n");
        return 1;
    }

    destinationFile = fopen(argv[3], "w");
    if (destinationFile == NULL) {
        printf("Failed to create the destination file.\n");
        fclose(sourceFile);
        return 1;
    }

    while ((bytesRead = fread(buffer, 1, BUFFER_SIZE, sourceFile)) > 0) {
        if (option != 0) {
            changeCase(buffer, option);
        }
        fwrite(buffer, 1, bytesRead, destinationFile);
    }

    fclose(sourceFile);
    fclose(destinationFile);

    printf("File copied successfully.\n");

    return 0;
}

